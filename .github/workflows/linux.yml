name: Linux

on:
  pull_request:
    branches:
      - main
      - release/**

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-and-test:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Setup dependencies
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y curl cmake build-essential libopencv-dev
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

          # Halide
          mkdir ${HOME}/halide
          curl -L https://github.com/halide/Halide/releases/download/v17.0.1/Halide-17.0.1-x86-64-linux-52541176253e74467dabc42eeee63d9a62c199f6.tar.gz | tar zx -C ${HOME}/halide --strip-components 1
          find ${HOME}/halide -type d | xargs chmod 755
          sudo cp -r ${HOME}/halide/* /usr/

          # ONNXRuntime
          mkdir ${HOME}/onnxruntime
          curl -L https://github.com/microsoft/onnxruntime/releases/download/v1.16.3/onnxruntime-linux-x64-1.16.3.tgz | tar zx -C ${HOME}/onnxruntime --strip-components 1
          find ${HOME}/onnxruntime -type d | xargs chmod 755
          sudo cp -r ${HOME}/onnxruntime/* /usr/

          # zlib, libjpeg, libpng
          vcpkg install

      - name: Configure
        shell: bash
        run: cmake -D CMAKE_TOOLCHAIN_FILE=${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake -DCMAKE_BUILD_TYPE=$BUILD_TYPE -D ION_BUILD_TEST=ON -D ION_BUILD_EXAMPLE=ON $GITHUB_WORKSPACE

      - name: Build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        shell: bash
        run: |
          ctest --verbose -C $BUILD_TYPE
