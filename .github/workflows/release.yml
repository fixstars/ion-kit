name: Release

on:
  push:
    tags:
      - v*

jobs:
  release-linux:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Install dependencies
        run: |
          # Packages
          sudo apt-get update
          sudo apt-get install -y doxygen curl build-essential
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

      - name: Setup dependencies
        run: |
          # Halide
          mkdir ${HOME}/Halide
          curl -L https://github.com/halide/Halide/releases/download/v16.0.0/Halide-16.0.0-x86-64-linux-1e963ff817ef0968cc25d811a25a7350c8953ee6.tar.gz | tar zx -C ${HOME}/Halide --strip-components 1
          find ${HOME}/Halide -type d | xargs chmod 755

          # zlib, libjpeg, libpng
          vcpkg install

      - name: Configure
        run: cmake -D CMAKE_TOOLCHAIN_FILE=${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake -D CMAKE_BUILD_TYPE=Release -D ION_BUILD_TEST=OFF -D ION_BUILD_EXAMPLE=OFF -D ION_BUNDLE_HALIDE=ON -D HalideHelpers_DIR=${HOME}/Halide/lib/cmake/HalideHelpers -D Halide_DIR=${HOME}/Halide/lib/cmake/Halide $GITHUB_WORKSPACE

      - name: Build
        run: cmake --build . --config Release --target package

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ion-kit*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows:
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup dependencies
        shell: bash
        run: |
          # Halide
          mkdir ${HOME}/Halide
          curl -L https://github.com/halide/Halide/releases/download/v16.0.0/Halide-16.0.0-x86-64-windows-1e963ff817ef0968cc25d811a25a7350c8953ee6.zip -o Halide.zip
          unzip Halide.zip
          rm Halide.zip
          mv Halide*/* ${HOME}/Halide

          # zlib, libjpeg, libpng
          vcpkg install --triplet=x64-windows-static

      - name: Configure
        shell: bash
        run: cmake -G "Visual Studio 16 2019" -A x64 -D VCPKG_TARGET_TRIPLET=x64-windows-static -D CMAKE_TOOLCHAIN_FILE=${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake -D ION_BUILD_DOC=OFF -D ION_BUILD_TEST=OFF -D ION_BUILD_EXAMPLE=OFF -D ION_BUNDLE_HALIDE=ON -D HalideHelpers_DIR=${HOME}/Halide/lib/cmake/HalideHelpers -D Halide_DIR=${HOME}/Halide/lib/cmake/Halide $GITHUB_WORKSPACE

      - name: Build
        shell: bash
        run: cmake --build . --config Release --target package

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
            files: |
                ion-kit*.zip
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-macos:
    runs-on: macos-latest-xlarge

    steps:
      - uses: actions/checkout@v4

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Setup dependencies
        shell: bash
        run: |
            mkdir ${HOME}/Halide
            curl -L https://github.com/halide/Halide/releases/download/v16.0.0/Halide-16.0.0-arm-64-osx-1e963ff817ef0968cc25d811a25a7350c8953ee6.tar.gz | tar zx -C ${HOME}/Halide --strip-components 1
            find ${HOME}/Halide -type d | xargs chmod 755

      - name: Configure
        shell: bash
        run: cmake -D CMAKE_BUILD_TYPE=Release -D ION_BUILD_TEST=OFF -D ION_BUILD_EXAMPLE=OFF -D ION_BUNDLE_HALIDE=ON -D HalideHelpers_DIR=${HOME}/Halide/lib/cmake/HalideHelpers -D Halide_DIR=${HOME}/Halide/lib/cmake/Halide $GITHUB_WORKSPACE

      - name: Build
        shell: bash
        run: cmake --build . --config Release --target package

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ion-kit*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

