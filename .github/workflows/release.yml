name: Release

on:
  push:
    tags:
      - v*

jobs:
  release-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Setup dependencies
        run: |
          # Packages
          sudo apt-get update
          sudo apt-get install -y doxygen zlib1g-dev
          sudo apt-get clean
          sudo rm -rf /var/lib/apt/lists/*

          # Halide
          mkdir ${HOME}/halide
          curl -L https://github.com/halide/Halide/releases/download/v12.0.1/Halide-12.0.1-x86-64-linux-5dabcaa9effca1067f907f6c8ea212f3d2b1d99a.tar.gz | tar zx -C ${HOME}/halide --strip-components 1
          find ${HOME}/halide -type d | xargs chmod 755
          sudo mv ${HOME}/halide /usr/local/

      - name: Configure
        run: cmake -G Ninja -D CMAKE_BUILD_TYPE=Release -D CMAKE_PREFIX_PATH=/usr/local/halide -D ION_BUILD_ALL_BB=OFF -D ION_BUILD_DOC=OFF -D ION_BUILD_TEST=OFF -D ION_BUILD_EXAMPLE=OFF -D ION_BUNDLE_HALIDE=ON -D WITH_CUDA=OFF $GITHUB_WORKSPACE

      - name: Build
        run: cmake --build . --config Release --target package

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ion-kit*.deb
            ion-kit*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get latest CMake and ninja
        uses: lukka/get-cmake@latest

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup dependencies
        shell: bash
        run: |
          # Halide
          mkdir ${HOME}/halide
          curl -L https://github.com/halide/Halide/releases/download/v12.0.1/Halide-12.0.1-x86-64-windows-5dabcaa9effca1067f907f6c8ea212f3d2b1d99a.zip -o halide.zip
          unzip halide.zip
          rm halide.zip
          mv Halide*/* ${HOME}/halide

          # Doxygen/Sphinx
          pip3 install sphinx_rtd_theme breathe

      - name: Configure
        shell: bash
        run: cmake -G "Visual Studio 16 2019" -A x64 -D CMAKE_BUILD_TYPE=Release -D CMAKE_PREFIX_PATH=${HOME}/halide -D ION_BUILD_ALL_BB=OFF -D ION_BUILD_DOC=OFF -D ION_BUILD_TEST=OFF -D ION_BUILD_EXAMPLE=OFF -D ION_BUNDLE_HALIDE=ON -D WITH_CUDA=OFF $GITHUB_WORKSPACE

      - name: Build
        shell: bash
        run: cmake --build . --config Release --target package

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
            files: |
                ion-kit*.zip
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
