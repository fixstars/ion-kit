name: Windows

on:
  pull_request:
    branches:
      - main
      - release/**

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-and-test:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v4

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Setup msbuild
        uses: microsoft/setup-msbuild@v1

      - name: Setup dependencies
        shell: bash
        run: |
          # Halide
          mkdir ${HOME}/Halide
          curl -L https://github.com/halide/Halide/releases/download/v17.0.1/Halide-17.0.1-x86-64-windows-52541176253e74467dabc42eeee63d9a62c199f6.zip -o Halide.zip
          unzip Halide.zip
          rm Halide.zip
          mv Halide*/* ${HOME}/Halide

          # zlib, libjpeg, libpng
          vcpkg install --triplet=x64-windows-static

      - name: Configure
        shell: bash
        run: cmake -G "Visual Studio 16 2019" -A x64 -D VCPKG_TARGET_TRIPLET=x64-windows-static -D CMAKE_TOOLCHAIN_FILE=${VCPKG_INSTALLATION_ROOT}/scripts/buildsystems/vcpkg.cmake -D ION_BUILD_TEST=ON -D ION_BUILD_EXAMPLE=ON -D HalideHelpers_DIR=${HOME}/Halide/lib/cmake/HalideHelpers -D Halide_DIR=${HOME}/Halide/lib/cmake/Halide $GITHUB_WORKSPACE

      - name: Build
        shell: bash
        run: cmake --build . --config $BUILD_TYPE

      - name: Test
        shell: bash
        run: |
          ctest --verbose -C $BUILD_TYPE
